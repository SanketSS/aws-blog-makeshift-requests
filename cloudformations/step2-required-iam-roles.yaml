AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS Cluster Role'

Parameters:
  EKSRolename:
    Type: String
    Description: EKS Role Name.
  EKSNodesRolename:
    Type: String
    Description: EKS Node group nodes role name.

Resources:
  eksClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref EKSRolename
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEKSClusterPolicy'
        - 'arn:aws:iam::aws:policy/AmazonEKSServicePolicy'

  NodeInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref EKSNodesRolename
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      Path: /

Outputs:
  RoleArn:
    Description: The role that Amazon EKS will use to create AWS resources for Kubernetes clusters
    Value: !GetAtt eksClusterRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-RoleArn"

  NodeInstanceRole:
    Description: The node instance role
    Value: !GetAtt NodeInstanceRole.Arn
    Export:
      #Name: !Sub "${AWS::StackName}-NodeInstanceRole"
      Name: "EKSNodeInstanceRoleArn"

  EKSClusterRole:
    Description: The node instance role
    Value: !GetAtt NodeInstanceRole.Arn
    Export:
      #Name: !Sub "${AWS::StackName}-EKSClusterRole"
      Name: "EKSClusterRoleArn"